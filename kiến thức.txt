useState:
// 1 la tham số khởi tạo . chỉ lấy lần đầu
// từ lần thứ 2 sẽ lấy giá trị lần khởi tạo trước . 
  const [counter , setCounter] = useState(1)

  Component sẽ được render lại khi gọi setState
  Khi thực hiện tính toán có thể đẩy giá trị vào làm biến initState để tối ưu hệ thống
  Oneway-binding : là sửa giá trị 1 chiều (thay đổi ở màn hình thì giá trị thay đổi)
  Twoway-binding : cả 2 chiều

  //Mounted và Unmounted (gắn vào vào gỡ ra)
Gặp khi làm việc với Component
useEffect:
thực hiện khi muốn sử dụn side effect - thay đổi dữ liệu của chương trình
useEffect luôn luôn được gọi sau khi component mounted

1.Update DOM ( thường dùng TH 1)
Có 3 trường hợp 
useEffect(callback) -> ít dùng
-gọi callback mỗi khi component re-render lại
-gọi callback sau khi component thêm element vào DOM
-
useEffect(callback,[])-> dung de call api 1 lần , mà k cần thực hiện gen lại
useEffect(callback,[depen])-> call back sẽ được gọi lại mỗi khi depen thay đổi
2.Call API
nếu dùng TH 1 thì sẽ bị th call api liền tục ( dính vòng lặp)
nên sẽ dùng TH 2 
3.listion DOM events
-Scroll
-Resize
// useEffect với timeer
clean up function
được gọi trước khi component unmout luôn gọi trước call back




https://icons.getbootstrap.com/icons/three-dots-vertical/
trello
-useEffect quy trình
1. cập nhật lại state
2.cập nhật lại DOM
3.Render lại UI
4.Gọi cleanup nếu deps thay đổi
5.Gọi useEffect callback

-useLayoutEffect()  quy trình thường dùng khi bạn setState ở trong 1 hàm xong lại setState đó trong useEffect với điều kiện nào đó  -> hiện tượng nhấp nháy -> sử dụng useLayoutEffect 
1.Cập nhật lại state
2.Cập nhật lại DOM
3.Gọi cleanup nếu deps thay đổi (sync)
4.Gọi useLayoutEffect callbacl(sync)
5.Render lại UI


-useRef()
useRef luôn luôn trả về 1 object với thuộc tính là curent . truy câp qua nó để trả về giá trị
Có thể sửa lại giá trị ngược lại
-useMemo() - ghi nhớ laf Higher order component (HOC)
ghi nhớ lại các props của 1 component để tránh render lại component không cần thiết
nó sẽ ghi lại tất cả các props của component đó . nếu có 1 props thay đổi thì nó sẽ render lại
-useCallback() \
tránh tạo ra những cái function mới k cần thiết trong component tránh component render lại không cần thiết
trong thực tế 1 component nhận rất nhiều loại props 
nếu sử dụng reactMemo thì các function phải sử dụng useCallback cho function để tránh render lại
Còn nếu k dung Memo thì k dùng callback